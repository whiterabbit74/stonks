#!/bin/bash

# üîÑ –°–ò–°–¢–ï–ú–ê –û–¢–ö–ê–¢–ê –ö –ü–†–ï–î–´–î–£–©–ï–ô –í–ï–†–°–ò–ò
# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â—É—é —Ä–∞–±–æ—á—É—é –≤–µ—Ä—Å–∏—é —Å–∏—Å—Ç–µ–º—ã

set -e

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–æ–∏—Å–∫ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –æ–±—Ä–∞–∑–æ–≤
find_previous_images() {
    log_info "–ò—â—É –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤–µ—Ä—Å–∏–∏ –æ–±—Ä–∞–∑–æ–≤..."

    # –ù–∞–π—Ç–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–µ—Ä–≤–µ—Ä –æ–±—Ä–∞–∑
    prev_server=$(docker images stonks-server --format "{{.ID}}" | sed -n '2p')
    if [[ -n "$prev_server" ]]; then
        log_success "–ù–∞–π–¥–µ–Ω –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–µ—Ä–≤–µ—Ä: $prev_server"
    else
        log_error "–ü—Ä–µ–¥—ã–¥—É—â–∏–π —Å–µ—Ä–≤–µ—Ä –æ–±—Ä–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi

    # –ù–∞–π—Ç–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π frontend –æ–±—Ä–∞–∑
    prev_frontend=$(docker images stonks-frontend --format "{{.ID}}" | sed -n '2p')
    if [[ -n "$prev_frontend" ]]; then
        log_success "–ù–∞–π–¥–µ–Ω –ø—Ä–µ–¥—ã–¥—É—â–∏–π frontend: $prev_frontend"
    else
        log_error "–ü—Ä–µ–¥—ã–¥—É—â–∏–π frontend –æ–±—Ä–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi

    return 0
}

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
backup_current_state() {
    log_info "–°–æ–∑–¥–∞—é –±—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è..."

    backup_dir="rollback_backup_$(date +%Y%m%d_%H%M%S)"
    mkdir -p "$backup_dir"

    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–æ–≥–∏
    docker logs stonks-server > "$backup_dir/current_server.log" 2>&1 || true
    docker logs stonks-frontend > "$backup_dir/current_frontend.log" 2>&1 || true

    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—Ä–∞–∑—ã
    log_info "–°–æ—Ö—Ä–∞–Ω—è—é —Ç–µ–∫—É—â–∏–µ –æ–±—Ä–∞–∑—ã..."
    docker save stonks-server:latest > "$backup_dir/current_server.tar" 2>/dev/null || true
    docker save stonks-frontend:latest > "$backup_dir/current_frontend.tar" 2>/dev/null || true

    log_success "–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: $backup_dir"
}

# –û—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–∏–º –æ–±—Ä–∞–∑–∞–º
rollback_images() {
    log_info "–í—ã–ø–æ–ª–Ω—è—é –æ—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–∏–º –æ–±—Ä–∞–∑–∞–º..."

    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–µ —Å–µ—Ä–≤–∏—Å—ã
    docker compose down

    # –£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –æ–±—Ä–∞–∑—ã (–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–ª—è –±—ç–∫–∞–ø–∞)
    log_info "–£–¥–∞–ª—è—é —Ç–µ–∫—É—â–∏–µ –æ–±—Ä–∞–∑—ã..."
    docker rmi stonks-server:latest 2>/dev/null || true
    docker rmi stonks-frontend:latest 2>/dev/null || true

    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–±—Ä–∞–∑—ã
    log_info "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–±—Ä–∞–∑—ã..."
    docker tag "$prev_server" stonks-server:latest
    docker tag "$prev_frontend" stonks-frontend:latest

    # –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –æ–±—Ä–∞–∑–∞–º–∏
    docker compose up -d

    log_success "–û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞
verify_rollback() {
    log_info "–ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ—Ç–∫–∞—Ç–∞..."

    # –ü–æ–¥–æ–∂–¥–∞—Ç—å –∑–∞–ø—É—Å–∫–∞
    sleep 30

    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
    if docker compose ps | grep -q "Up"; then
        log_success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞"

        # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
        if curl -f -s --max-time 10 http://localhost/ > /dev/null 2>&1; then
            log_success "Frontend –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            log_warning "Frontend –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi

        if curl -f -s --max-time 10 http://localhost:3001/api/status > /dev/null 2>&1; then
            log_success "API –¥–æ—Å—Ç—É–ø–µ–Ω"
        else
            log_warning "API –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        fi

    else
        log_error "–°–µ—Ä–≤–∏—Å—ã –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞!"
        docker compose logs
        return 1
    fi

    return 0
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "=========================================="
    log_info "üîÑ –ù–ê–ß–ò–ù–ê–Æ –û–¢–ö–ê–¢ –°–ò–°–¢–ï–ú–´"
    echo "=========================================="

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ—Ç–∫–∞—Ç? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log_info "–û—Ç–∫–∞—Ç –æ—Ç–º–µ–Ω–µ–Ω"
        exit 0
    fi

    # –®–∞–≥ 1: –ù–∞–π—Ç–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–±—Ä–∞–∑—ã
    if ! find_previous_images; then
        log_error "–ù–µ –º–æ–≥—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ—Ç–∫–∞—Ç - –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–±—Ä–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        exit 1
    fi

    # –®–∞–≥ 2: –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø
    backup_current_state

    # –®–∞–≥ 3: –í—ã–ø–æ–ª–Ω–∏—Ç—å –æ—Ç–∫–∞—Ç
    if rollback_images; then
        # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if verify_rollback; then
            log_success "üéâ –û–¢–ö–ê–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!"
            echo
            log_info "–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ:"
            log_info "‚úÖ –ü—Ä–µ–¥—ã–¥—É—â–∏–µ –æ–±—Ä–∞–∑—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            log_info "‚úÖ –°–µ—Ä–≤–∏—Å—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
            log_info "‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞"
            echo
            log_info "–ë—ç–∫–∞–ø —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è: $backup_dir"
            log_info "–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: docker compose build && docker compose up -d"
        else
            log_error "–û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å–æ –∑–¥–æ—Ä–æ–≤—å–µ–º —Å–∏—Å—Ç–µ–º—ã"
            log_info "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose logs"
        fi
    else
        log_error "–û—Ç–∫–∞—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω!"
        exit 1
    fi
}

# –ó–∞–ø—É—Å–∫
main "$@"
