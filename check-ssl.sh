#!/bin/bash

# SSL Certificate Validation Script
# This script checks the validity and type of SSL certificate

set -e

DOMAIN=${DOMAIN:-"tradingibs.site"}
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "üîí –ü–†–û–í–ï–†–ö–ê SSL –°–ï–†–¢–ò–§–ò–ö–ê–¢–ê"
echo "=========================="
echo "–î–æ–º–µ–Ω: $DOMAIN"
echo ""

# Function to print status
status() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

# Check 1: Basic connectivity
echo "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
if curl -I --max-time 10 https://$DOMAIN/ 2>/dev/null | grep -q "HTTP/"; then
    status "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ HTTPS —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ HTTPS"
    exit 1
fi

# Check 2: SSL certificate details
echo ""
echo "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
CERT_INFO=$(openssl s_client -connect $DOMAIN:443 -servername $DOMAIN < /dev/null 2>/dev/null | openssl x509 -noout -dates -subject -issuer -fingerprint -sha256 2>/dev/null)

if [ $? -eq 0 ]; then
    echo "$CERT_INFO"

    # Check if it's production or staging
    if echo "$CERT_INFO" | grep -q "Let's Encrypt"; then
        if echo "$CERT_INFO" | grep -q "STAGING"; then
            error "–°–ï–†–¢–ò–§–ò–ö–ê–¢ STAGING! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç!"
            echo ""
            echo "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è production —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:"
            echo "1. –û–±–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
            echo "   TLS_CA=https://acme-v02.api.letsencrypt.org/directory"
            echo "2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã:"
            echo "   docker compose restart caddy"
        else
            status "PRODUCTION —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç Let's Encrypt"
        fi
    else
        warning "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–∑–¥–∞—Ç–µ–ª—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
    fi
else
    error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ"
    exit 1
fi

# Check 3: Certificate validity period
echo ""
echo "3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è..."
NOT_BEFORE=$(echo "$CERT_INFO" | grep "notBefore" | cut -d'=' -f2)
NOT_AFTER=$(echo "$CERT_INFO" | grep "notAfter" | cut -d'=' -f2)

echo "–í—ã–¥–∞–Ω: $NOT_BEFORE"
echo "–ò—Å—Ç–µ–∫–∞–µ—Ç: $NOT_AFTER"

# Calculate days until expiration
EXPIRY_DATE=$(date -d "$NOT_AFTER" +%s 2>/dev/null || date -j -f "%b %d %T %Y %Z" "$NOT_AFTER" +%s 2>/dev/null)
CURRENT_DATE=$(date +%s)
DAYS_LEFT=$(( (EXPIRY_DATE - CURRENT_DATE) / 86400 ))

if [ $DAYS_LEFT -gt 30 ]; then
    status "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –µ—â–µ $DAYS_LEFT –¥–Ω–µ–π"
elif [ $DAYS_LEFT -gt 7 ]; then
    warning "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ $DAYS_LEFT –¥–Ω–µ–π"
else
    error "–°–ï–†–¢–ò–§–ò–ö–ê–¢ –ò–°–¢–ï–ö–ê–ï–¢ –ß–ï–†–ï–ó $DAYS_LEFT –î–ù–ï–ô!"
fi

# Check 4: Domain validation
echo ""
echo "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–∞..."
SUBJECT=$(echo "$CERT_INFO" | grep "subject=" | cut -d'=' -f2-)
if echo "$SUBJECT" | grep -q "$DOMAIN"; then
    status "–î–æ–º–µ–Ω –≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç: $DOMAIN"
else
    error "–î–æ–º–µ–Ω –≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ –ù–ï —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç!"
    echo "–û–∂–∏–¥–∞–ª–æ—Å—å: $DOMAIN"
    echo "–í —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ: $SUBJECT"
fi

# Check 5: Local configuration check
echo ""
echo "5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

# Check Caddyfile
if [ -f "caddy/Caddyfile" ]; then
    if grep -q "staging" caddy/Caddyfile; then
        warning "Caddyfile —Å–æ–¥–µ—Ä–∂–∏—Ç 'staging' –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!"
        echo "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –æ–±–Ω–æ–≤–∏—Ç—å –¥–æ production."
    else
        status "Caddyfile –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    fi
else
    warning "Caddyfile –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# Check environment variables
if [ -f ".env" ]; then
    if grep -q "staging" .env 2>/dev/null; then
        warning ".env —Å–æ–¥–µ—Ä–∂–∏—Ç 'staging' –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!"
    else
        status "–§–∞–π–ª .env –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    fi
else
    warning "–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "üéâ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo ""
echo "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  docker compose logs caddy    - –ª–æ–≥–∏ Caddy"
echo "  docker compose restart caddy - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Caddy"
echo "  ./check-ssl.sh              - –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
