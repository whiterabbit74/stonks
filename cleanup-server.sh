#!/bin/bash

# üßπ –°–ò–°–¢–ï–ú–ê –û–ß–ò–°–¢–ö–ò –°–ï–†–í–ï–†–ê
# –£–¥–∞–ª—è–µ—Ç —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã, –æ–±—Ä–∞–∑—ã –∏ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –º–µ—Å—Ç–æ

set -e

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏
log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –û—á–∏—Å—Ç–∫–∞ Docker
cleanup_docker() {
    log_info "–û—á–∏—â–∞—é Docker..."

    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker stop $(docker ps -aq) 2>/dev/null || true

    # –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker rm $(docker ps -aq) 2>/dev/null || true

    # –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤–µ—Ä—Å–∏–π
    log_info "–£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã..."

    # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤–µ—Ä—Å–∏–∏
    docker tag stonks-server:latest stonks-server:latest-backup 2>/dev/null || true
    docker tag stonks-frontend:latest stonks-frontend:latest-backup 2>/dev/null || true

    # –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –æ–±—Ä–∞–∑—ã
    docker rmi $(docker images -q) 2>/dev/null || true

    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≤–µ—Ä—Å–∏–∏
    docker tag stonks-server:latest-backup stonks-server:latest 2>/dev/null || true
    docker tag stonks-frontend:latest-backup stonks-frontend:latest 2>/dev/null || true
    docker rmi stonks-server:latest-backup stonks-frontend:latest-backup 2>/dev/null || true

    # –û—á–∏—Å—Ç–∏—Ç—å —Å–∏—Å—Ç–µ–º—É
    docker system prune -af
    docker volume prune -f
    docker network prune -f

    log_success "Docker –æ—á–∏—â–µ–Ω"
}

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
cleanup_temp_files() {
    log_info "–û—á–∏—â–∞—é –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."

    # –£–¥–∞–ª–∏—Ç—å –∞—Ä—Ö–∏–≤—ã
    rm -f *.tgz *.tar.gz 2>/dev/null || true

    # –£–¥–∞–ª–∏—Ç—å –ª–æ–≥–∏ —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π
    find . -name "*.log" -type f -mtime +7 -delete 2>/dev/null || true

    # –£–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    find . -name "tmp_*" -type f -mtime +1 -delete 2>/dev/null || true
    find . -name "*.tmp" -type f -mtime +1 -delete 2>/dev/null || true

    # –û—á–∏—Å—Ç–∏—Ç—å node_modules –æ—Ç –∫—ç—à–∞
    if [[ -d "node_modules" ]]; then
        rm -rf node_modules/.cache 2>/dev/null || true
        rm -rf node_modules/.vite 2>/dev/null || true
    fi

    log_success "–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã"
}

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
cleanup_backups() {
    log_info "–û—á–∏—â–∞—é —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã..."

    # –£–¥–∞–ª–∏—Ç—å –±—ç–∫–∞–ø—ã —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π
    find . -name "backup_*" -type d -mtime +30 -exec rm -rf {} + 2>/dev/null || true
    find . -name "auto_backup_*" -type d -mtime +30 -exec rm -rf {} + 2>/dev/null || true
    find . -name "rollback_backup_*" -type d -mtime +30 -exec rm -rf {} + 2>/dev/null || true

    # –û—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –±—ç–∫–∞–ø–æ–≤ –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞
    for pattern in "backup_*" "auto_backup_*" "rollback_backup_*"; do
        backup_count=$(ls -1d ${pattern} 2>/dev/null | wc -l)
        if [[ $backup_count -gt 5 ]]; then
            ls -1td ${pattern} 2>/dev/null | tail -n +6 | xargs rm -rf 2>/dev/null || true
        fi
    done

    log_success "–°—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã –æ—á–∏—â–µ–Ω—ã"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
check_disk_space() {
    log_info "–ü—Ä–æ–≤–µ—Ä—è—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞..."

    # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
    df -h /

    # –ü–æ–∫–∞–∑–∞—Ç—å —Å–∞–º—ã–µ –±–æ–ª—å—à–∏–µ –ø–∞–ø–∫–∏
    log_info "–°–∞–º—ã–µ –±–æ–ª—å—à–∏–µ –ø–∞–ø–∫–∏:"
    du -sh * 2>/dev/null | sort -hr | head -10 || true

    # –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Docker
    log_info "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Docker:"
    docker system df
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "=========================================="
    log_info "üßπ –ù–ê–ß–ò–ù–ê–Æ –û–ß–ò–°–¢–ö–£ –°–ï–†–í–ï–†–ê"
    echo "=========================================="

    # –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    log_warning "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï!"
    log_warning "–≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è —É–¥–∞–ª–∏—Ç:"
    log_warning "  - –í—Å–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
    log_warning "  - –°—Ç–∞—Ä—ã–µ Docker –æ–±—Ä–∞–∑—ã"
    log_warning "  - –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
    log_warning "  - –°—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)"
    echo

    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        log_info "–û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞"
        exit 0
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –¥–æ –æ—á–∏—Å—Ç–∫–∏
    log_info "–ú–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ –î–û –æ—á–∏—Å—Ç–∫–∏:"
    check_disk_space
    echo

    # –®–∞–≥ 1: –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    cleanup_temp_files

    # –®–∞–≥ 2: –û—á–∏—Å—Ç–∫–∞ –±—ç–∫–∞–ø–æ–≤
    cleanup_backups

    # –®–∞–≥ 3: –û—á–∏—Å—Ç–∫–∞ Docker
    cleanup_docker

    echo
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
    log_info "–ú–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ –ü–û–°–õ–ï –æ—á–∏—Å—Ç–∫–∏:"
    check_disk_space

    echo
    echo "=========================================="
    log_success "üéâ –û–ß–ò–°–¢–ö–ê –°–ï–†–í–ï–†–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
    echo
    log_info "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    log_info "1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å—ã: docker compose up -d"
    log_info "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∑–¥–æ—Ä–æ–≤—å–µ: ./health-check.sh"
    log_info "3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ./auto-update.sh daemon"
}
